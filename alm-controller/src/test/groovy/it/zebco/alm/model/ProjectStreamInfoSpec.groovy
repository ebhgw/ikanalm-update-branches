package it.zebco.alm.model


import spock.lang.Shared
import spock.lang.Specification

/*
 * This Spock specification was generated by the Gradle 'init' task.
 */

class ProjectStreamInfoSpec extends Specification {

    /* sample row returned by query in findBranchByPrefixSuffix
    [project_NAME:SS01OTX, project_VCRPROJECTNAME:SS01OTX, projectStream_STATUS:5,
    projectStream_ISHEAD:false, projectStream_VCRBRANCHID:SS01OTX/branches/correttiva,
    projectStream_BUILDPREFIX:correttiva, projectStream_BUILDSUFFIX:R01,
    lifecycle_NAME:Correttiva R1, vcr_NAME:IKALM_REHOST_SIGEA, vcr_COMMANDPATH:C:/Program Files/SlikSvn/bin,
    vcr_USERID:EY00018, vcr_PASSWORD:869462b05d7cd61d0f291876bfce2928,
    vcr_TIMEOUT:700, svn_REPOSITORYURL:http://ws001sc1-00-alm.rmasede.grma.net:18088/svn/IKALM_REHOST_SIGEA,
    svn_REPOSITORYLAYOUT:0, svn_TRUNKDIRECTORY:Reference, svn_TAGSDIRECTORY:TagVersioni]
     */

    @Shared def row1 = [lifecycle_NAME           : 'Correttiva R1',
                        project_NAME             : 'SS01OTX',
                        project_VCRPROJECTNAME   : 'SS01OTX',
                        projectStream_VCRBRANCHID: 'SS01OTX/branches/correttiva',
                        projectStream_ISHEAD     : false,
                        projectStream_BUILDPREFIX: 'correttiva',
                        projectStream_BUILDSUFFIX: 'R01',
                        projectStream_STATUS     : 5,
                        svn_REPOSITORYURL        : 'http://ws001sc1-00-alm.rmasede.grma.net:18088/svn/IKALM_REHOST_SIGEA',
                        svn_REPOSITORYLAYOUT     : '0',
                        svn_TAGSDIRECTORY        : 'TagVersioni',
                        svn_TRUNKDIRECTORY       : 'Reference',
                        vcr_NAME                 : 'IKALM_REHOST_SIGEA',
                        vcr_USERID               : 'EY00018']

    @Shared def row2 = [project_NAME             : 'SS01OTX',
                        projectStream_VCRBRANCHID: 'SS01OTX/branches/SIGE1801',
                        projectStream_ISHEAD     : false,
                        projectStream_BUILDPREFIX: 'SIGE1801',
                        projectStream_BUILDSUFFIX: 'R02',
                        svn_REPOSITORYURL        : 'http://ws001sc1-00-alm.rmasede.grma.net:18088/svn/IKALM_REHOST_SIGEA',
                        projectStream_STATUS     : 5,
                        svn_REPOSITORYLAYOUT     : '0',
                        svn_TRUNKDIRECTORY       : 'Reference',
                        project_VCRPROJECTNAME   : 'SS01OTX'
    ]

    @Shared def row3 = [project_NAME             : 'SS01OTX',
                        projectStream_VCRBRANCHID: 'SS01OTX/branches/SIGE1803',
                        projectStream_ISHEAD     : false,
                        projectStream_BUILDPREFIX: 'SIGE1803',
                        projectStream_BUILDSUFFIX: 'R02',
                        svn_REPOSITORYURL        : 'http://ws001sc1-00-alm.rmasede.grma.net:18088/svn/IKALM_REHOST_SIGEA',
                        projectStream_STATUS     : 5,
                        svn_REPOSITORYLAYOUT     : '0',
                        svn_TRUNKDIRECTORY       : 'Reference',
                        project_VCRPROJECTNAME   : 'SS01OTX'
    ]

    @Shared def row4 = [project_NAME             : 'SP01OTX',
                        projectStream_VCRBRANCHID: 'SP01OTX/branches/SIGE1801',
                        projectStream_ISHEAD     : false,
                        projectStream_BUILDPREFIX: 'correttiva',
                        projectStream_BUILDSUFFIX: 'R01',
                        svn_REPOSITORYURL        : 'http://ws001sc1-00-alm.rmasede.grma.net:18088/svn/IKALM_REHOST_SIGEA',
                        projectStream_STATUS     : 5,
                        svn_REPOSITORYLAYOUT     : '0',
                        svn_TRUNKDIRECTORY       : 'Reference',
                        project_VCRPROJECTNAME   : 'SP01OTX'
    ]

    // SS01OTX, Reference
    @Shared def row5 = [project_NAME             : 'SS01OTX',
                        projectStream_VCRBRANCHID: 'SS01OTX/branches/SIGE1801',
                        projectStream_ISHEAD     : true,
                        projectStream_BUILDPREFIX: 'Reference',
                        projectStream_BUILDSUFFIX: '',
                        svn_REPOSITORYURL        : 'http://ws001sc1-00-alm.rmasede.grma.net:18088/svn/IKALM_REHOST_SIGEA',
                        projectStream_STATUS     : 5,
                        svn_REPOSITORYLAYOUT     : '0',
                        svn_TRUNKDIRECTORY       : 'Reference',
                        project_VCRPROJECTNAME   : 'SS01OTX'
    ]

    @Shared ProjectStreamInfo psis1 = new ProjectStreamInfo(row1)
    @Shared ProjectStreamInfo psis2 = new ProjectStreamInfo(row2)
    @Shared ProjectStreamInfo psis3 = new ProjectStreamInfo(row3)
    @Shared ProjectStreamInfo psis4 = new ProjectStreamInfo(row4)
    @Shared ProjectStreamInfo psis5 = new ProjectStreamInfo(row5)

    @Shared def expb1 = new Expando(projectStreamType: 'correttiva',
            streamId: 'ND',
            envName: 'INTR1')
    @Shared def expb2 = new Expando(projectStreamType: 'evolutiva',
            streamId: 'SIGE1801',
            envName: 'INTR2')

    @Shared def expd1 = new Expando(projectStreamType: 'correttiva',
            ReleaseTemp: 'ND')
    @Shared def expd2 = new Expando(projectStreamType: 'evolutiva',
            ReleaseTemp: 'R02')

    def "constructor with row" () {
        when:
        def psi = new ProjectStreamInfo(row1)
        then:
        psi.getClass().toString() == 'class it.zebco.alm.model.ProjectStreamInfo'
    }

    def "equality test true" () {
        when:
        def psi1 = new ProjectStreamInfo(row1)
        def psi2 = new ProjectStreamInfo(row1)
        then:
        psi1 == psi2
    }

    def "equality test false different project stream" () {
        when:
        def psi1 = new ProjectStreamInfo(row1)
        def psi2 = new ProjectStreamInfo(row4)
        then:
        psi1 != psi2
    }

    def "contains test" () {
        expect:
        lpsi.contains(testPsi) == boolRes
        where:
        lpsi           |testPsi |boolRes
        []             |psis1   |false
        [psis1]        |psis2   |false
        [psis1]        |psis1   |true
        [psis1, psis2] |psis1   |true

        //lpsi.find{ it == psi2 } == psi2
    }

    def "find element in list" () {
        expect:
        [psis1,psis2].find{ it == psis1 } == psis1
    }

    def "find test" () {
        expect:
        (lpsi.find{ it == test } == test)== res
        where:
        lpsi|test|res
        []|psis1|false
        [psis1]|psis2|false
        [psis2]|psis1|false
        [psis1]|psis1|true
        [psis1,psis2]|psis1|true
    }



    def "remove project stream from a list including it" () {
        given:
        ProjectStreamInfo psi1 = new ProjectStreamInfo(row1)
        ProjectStreamInfo psi2 = new ProjectStreamInfo(row4)
        List<ProjectStreamInfo> lpsi = [psi1,  psi2]
        when:
        List<ProjectStreamInfo> res = lpsi - psi2
        then:
        res.size() == 1
        !res.contains(psi2)
    }

    def "remove a project stream from a list" () {
        expect:
        !(lpsi - test).contains(test)
        where:
        lpsi|test
        []|psis1
        [psis1]|psis1
        [psis1,psis2]|psis1
        [psis2]|psis1
    }

    def "remove a project stream from a list keep other untouched" () {
        expect:
        (lpsi - test).contains(other)
        where:
        lpsi|test|other
        [psis2]|psis1|psis2
        [psis1,psis2]|psis1|psis2
        [psis1,psis2,psis3]|psis1|psis2
    }

    def "getBranchUri" () {
        expect:
        new ProjectStreamInfo(row).getBranchUri() == branch
        where:
        row  |branch
        row1 |'SS01OTX/branches/correttiva'
        row2 |'SS01OTX/branches/SIGE1801'
        row5 |'SS01OTX/Reference'
    }

    def "getCanonicalBranchUri" () {
        expect:
        new ProjectStreamInfo(row).getCanonicalBranchUri() == branch
        where:
        row  |branch
        row1 |'http://ws001sc1-00-alm.rmasede.grma.net:18088/svn/IKALM_REHOST_SIGEA/SS01OTX/branches/correttiva'
        row5 |'http://ws001sc1-00-alm.rmasede.grma.net:18088/svn/IKALM_REHOST_SIGEA/SS01OTX/Reference'
    }

    def "getParameters4TuxedoSigeaBuild" () {
        expect:
        new ProjectStreamInfo(row).getParameters4TuxedoSigeaBuild().getProperties().equals(expb.getProperties())
        where:
        row|expb
        row1|expb1
        row2|expb2

    }

    def "getParameters4TuxedoSigeaDeploy" () {
        expect:
        new ProjectStreamInfo(row).getParameters4TuxedoSigeaDeploy().getProperties().equals(expd.getProperties())
        where:
        row|expd
        row1|expd1
        row2|expd2
    }
}
