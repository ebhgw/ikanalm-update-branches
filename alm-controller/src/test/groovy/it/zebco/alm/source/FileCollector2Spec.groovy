package it.zebco.alm.source

import org.junit.Rule
import org.junit.rules.TemporaryFolder
import spock.lang.Specification

/*
 * This Spock specification was generated by the Gradle 'init' task.
 */

class FileCollector2Spec extends Specification {

    @Rule final TemporaryFolder testDir = new TemporaryFolder(new File('src/test/temp'))

    def "getFiles() on empty dirs 2999"() {
        given: "empty dir"
        File working = testDir.newFolder('2999')
        FileCollector fc = new FileCollector(working)
        when:
        def res = fc.getFiles()
        then:
        res.isEmpty()
    }

    def "getFiles() on no file 3000"() {
        given: "one dir no source file"
        File working = testDir.newFolder('3000')
        File cics = testDir.newFolder('3000', 'cics')
        FileCollector fc = new FileCollector(working)
        when:
        def res = fc.getFiles()
        then:
        res.isEmpty()
    }

    def "getFiles() on 1 file 3001"() {
        given:
        File working = testDir.newFolder('3001')
        File batch = testDir.newFolder('3001', 'batch')
        File t1 = new File(batch, 'test1.cbl')
        t1.createNewFile()
        FileCollector fc = new FileCollector(working)
        when:
        def res = fc.getFiles()
        then:
        res.size() == 1
        res[0].path.toString() == 'batch\\test1.cbl'
    }

    def "getFiles() on 2 file same name diff dir 3002"() {
        given:
        File working = testDir.newFolder('3002')
        File batch = testDir.newFolder('3002', 'batch')
        File t1 = new File(batch, 'test1.cbl')
        t1.createNewFile()
        File cics = testDir.newFolder('3002', 'cics')
        File t2 = new File(batch, 'test2.cbl')
        t2.createNewFile()
        FileCollector fc = new FileCollector(working)
        when:
        def res = fc.getFiles()
        def names = res.findResults{
            it.name
        }.toSorted()
        then:
        res.size() == 2
        names == ['test1.cbl', 'test2.cbl']
    }

    def "getFiles() on file with £"() {
        given:
        File working = testDir.newFolder('300')
        File batch = testDir.newFolder('300', 'batch')
        File t1 = new File(batch, 'A£BCDEF.jmodel')
        t1.createNewFile()
        FileCollector fc = new FileCollector(working)
        when:
        def res = fc.getFiles()
        def names = res.findResults{
            it.name
        }.toSorted()
        then:
        res.size() == 1
        res[0].path.toString() == 'batch\\A£BCDEF.jmodel'
    }
}
