package it.zebco.proc

import groovy.util.logging.Slf4j
import spock.lang.Specification

/*
 * This Spock specification was generated by the Gradle 'init' task.
 */

@Slf4j
class SvnCmdFBuilderSpec extends Specification {
    //@Shared File tmpFile

    // setup
    SvnCmdBuilder svnFctry = new SvnCmdBuilder()

    def "test empty constructor" () {
        when:
        SvnCmdBuilder svnFctry = new SvnCmdBuilder()
        then:
        svnFctry.getClass().toString() == 'class it.zebco.proc.SvnCmdBuilder'
    }

    def "withBinPath set svnExe and not raise errors" () {
        given:
        SvnCmdBuilder svnFctry = new SvnCmdBuilder()
        when:
        svnFctry= svnFctry.withBinPath("C:/bin")
        then:
        noExceptionThrown()
        svnFctry.svnExe == 'C:/bin/svn'
        svnFctry.getClass().toString() == 'class it.zebco.proc.SvnCmdBuilder'
    }

    def "empty withBinPath" () {
        given:
        SvnCmdBuilder svnFctry = new SvnCmdBuilder()
        when:
        svnFctry = svnFctry.withBinPath('')
        then:
        noExceptionThrown()
        svnFctry.svnExe == 'svn'
    }

    def "build a command and test for correctness" () {
        given:
        SvnCmdBuilder svnFctry = new SvnCmdBuilder()
        String uri = "http://ws001sc1-00-alm.rmasede.grma.net:18088/svn/IKALM_REHOST_SIGEA/TEST/branches/correttiva"
        when:
        List<String> existsCmd = svnFctry.getExists(uri)
        then: 'comparison string tested for correctness in cmd'
        existsCmd.join(' ') == 'svn ls http://ws001sc1-00-alm.rmasede.grma.net:18088/svn/IKALM_REHOST_SIGEA/TEST/branches/correttiva --depth empty'
    }
}
