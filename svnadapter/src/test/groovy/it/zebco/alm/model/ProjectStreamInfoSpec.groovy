package it.zebco.alm.model

import spock.lang.Specification

/*
 * This Spock specification was generated by the Gradle 'init' task.
 */

class ProjectStreamInfoSpec extends Specification {

    def row1 = [project_NAME             : 'SS01OTX',
                projectStream_VCRBRANCHID: 'SS01OTX/branches/SIGE1801',
                projectStream_ISHEAD     : false,
                projectStream_BUILDPREFIX: 'correttiva',
                projectStream_BUILDSUFFIX: 'R01',
                svn_REPOSITORYURL        : 'http://ws001sc1-00-alm.rmasede.grma.net:18088/svn/IKALM_REHOST_SIGEA',
                projectStream_STATUS     : 5,
                svn_REPOSITORYLAYOUT     : '0',
                svn_TRUNKDIRECTORY       : 'Reference',
                project_VCRPROJECTNAME   : 'SS01OTX'
    ]

    def row2 = [project_NAME: 'SP01OTX',
               projectStream_VCRBRANCHID: 'SS01OTX/branches/SIGE1801',
               projectStream_ISHEAD: false,
               projectStream_BUILDPREFIX: 'correttiva',
               projectStream_BUILDSUFFIX: 'R01',
               svn_REPOSITORYURL: 'http://ws001sc1-00-alm.rmasede.grma.net:18088/svn/IKALM_REHOST_SIGEA',
               projectStream_STATUS: 5,
               svn_REPOSITORYLAYOUT: '0',
               svn_TRUNKDIRECTORY: 'Reference',
               project_VCRPROJECTNAME: 'SS01OTX'
    ]

    def "constructor with row" () {
        when:
        def psi = new ProjectStreamInfo(row1)
        then:
        psi.getClass().toString() == 'class it.zebco.alm.model.ProjectStreamInfo'
    }

    def "equality test true" () {
        when:
        def psi1 = new ProjectStreamInfo(row1)
        def psi2 = new ProjectStreamInfo(row1)
        then:
        psi1 == psi2
    }

    def "equality test false different project" () {
        when:
        def psi1 = new ProjectStreamInfo(row1)
        def psi2 = new ProjectStreamInfo(row2)
        then:
        psi1 != psi2
    }

    def "contains uses equality" () {
        when:
        ProjectStreamInfo psi1 = new ProjectStreamInfo(row1)
        List<ProjectStreamInfo> lpsi = [psi1]
        def psi2 = new ProjectStreamInfo(row1)
        then:
        lpsi.find{ it == psi2 } == psi2
    }

    def "contains uses equality fails on different project" () {
        when:
        ProjectStreamInfo psi1 = new ProjectStreamInfo(row1)
        List<ProjectStreamInfo> lpsi = [psi1]
        def psi2 = new ProjectStreamInfo(row2)
        then:
        lpsi.find{ it == psi2 } != psi2
    }
}
